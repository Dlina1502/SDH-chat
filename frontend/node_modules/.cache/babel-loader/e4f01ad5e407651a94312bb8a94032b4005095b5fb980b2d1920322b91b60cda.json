{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:5000/api';\nexport async function registerUserRequest(user) {\n  try {\n    const response = await axios.post(`${baseUrl}/user/register`, user);\n    let message = response.data.message;\n    let data = response.data.data;\n    console.log(response.data.message);\n    return {\n      message,\n      data\n    };\n  } catch (error) {\n    let message = error.message;\n    if (error.response && error.response.data) {\n      message = error.response.data.error;\n    }\n    return {\n      error: true,\n      message\n    };\n  }\n}\nexport async function loginUserRequest(user) {\n  try {\n    const response = await axios.post(`${baseUrl}/user/login`, user);\n    let message = response.data.message;\n    let data = response.data.data;\n    console.log(response.data.message);\n    return {\n      message,\n      data\n    };\n  } catch (error) {\n    let message = error.message;\n    if (error.response && error.response.data) {\n      message = error.response.data.error;\n    }\n    return {\n      error: true,\n      message\n    };\n  }\n}\n\n//Chats \n// router.get('/:id', chatController.getUserChats);\n// router.get('/find/:firstId/:secondId', chatController.findChat);\nexport async function getUserChatsRequest(id) {\n  try {\n    const response = await axios.get(`${baseUrl}/chat/${id}`);\n    let message = response.data.message;\n    let data = response.data.data;\n    console.log(response.data.message);\n    return {\n      message,\n      data\n    };\n  } catch (error) {\n    let message = error.message;\n    if (error.response && error.response.data) {\n      message = error.response.data.error;\n    }\n    return {\n      error: true,\n      message\n    };\n  }\n}\nexport async function findChatRequest(firstId, secondId) {\n  try {\n    const response = await axios.get(`${baseUrl}/chat/find/${firstId}/${secondId}`);\n    let message = response.data.message;\n    let data = response.data.data;\n    console.log(response.data.message);\n    return {\n      message,\n      data\n    };\n  } catch (error) {\n    let message = error.message;\n    if (error.response && error.response.data) {\n      message = error.response.data.error;\n    }\n    return {\n      error: true,\n      message\n    };\n  }\n}","map":{"version":3,"names":["axios","baseUrl","registerUserRequest","user","response","post","message","data","console","log","error","loginUserRequest","getUserChatsRequest","id","get","findChatRequest","firstId","secondId"],"sources":["C:/Users/marce/Desktop/Personal projects/SDH-chat/frontend/src/services/services.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:5000/api';\r\n\r\nexport async function registerUserRequest(user) {\r\n    try {\r\n        const response = await axios.post(`${baseUrl}/user/register`, user);\r\n        let message = response.data.message\r\n        let data = response.data.data\r\n        console.log(response.data.message)\r\n        return { message, data };\r\n    } catch (error) {\r\n        let message = error.message;\r\n        if (error.response && error.response.data) {\r\n\r\n            message = error.response.data.error;\r\n        }\r\n        return { error: true, message };\r\n    }\r\n}\r\n\r\nexport async function loginUserRequest(user) {\r\n    try {\r\n        const response = await axios.post(`${baseUrl}/user/login`, user);\r\n        let message = response.data.message\r\n        let data = response.data.data\r\n        console.log(response.data.message)\r\n        return { message, data };\r\n    } catch (error) {\r\n        let message = error.message;\r\n        if (error.response && error.response.data) {\r\n\r\n            message = error.response.data.error;\r\n        }\r\n        return { error: true, message };\r\n    }\r\n}\r\n\r\n//Chats \r\n// router.get('/:id', chatController.getUserChats);\r\n// router.get('/find/:firstId/:secondId', chatController.findChat);\r\nexport async function getUserChatsRequest(id) {\r\n    try {\r\n        const response = await axios.get(`${baseUrl}/chat/${id}`);\r\n        let message = response.data.message\r\n        let data = response.data.data\r\n        console.log(response.data.message)\r\n        return { message, data };\r\n    } catch (error) {\r\n        let message = error.message;\r\n        if (error.response && error.response.data) {\r\n\r\n            message = error.response.data.error;\r\n        }\r\n        return { error: true, message };\r\n    }\r\n}\r\n\r\nexport async function findChatRequest(firstId, secondId) {\r\n    try {\r\n        const response = await axios.get(`${baseUrl}/chat/find/${firstId}/${secondId}`);\r\n        let message = response.data.message\r\n        let data = response.data.data\r\n        console.log(response.data.message)\r\n        return { message, data };\r\n    } catch (error) {\r\n        let message = error.message;\r\n        if (error.response && error.response.data) {\r\n\r\n            message = error.response.data.error;\r\n        }\r\n        return { error: true, message };\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}