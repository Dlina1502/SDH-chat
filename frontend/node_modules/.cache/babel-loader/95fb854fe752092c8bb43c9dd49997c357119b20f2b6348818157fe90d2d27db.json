{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marce\\\\Desktop\\\\Personal projects\\\\SDH-chat\\\\frontend\\\\src\\\\context\\\\ChatContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { getUserChatsRequest } from '../services/services';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nexport const ChatProvider = ({\n  children,\n  user\n}) => {\n  _s();\n  // State for storing chat messages\n  // const [messages, setMessages] = useState([]);\n  const [userChats, setUserChats] = useState(null);\n  const [isUserChatsLoading, setIsUserChatsLoading] = useState(false);\n  // eslint-disable-next-line\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = io('http://localhost:3001');\n    setSocket(newSocket);\n    return () => newSocket.disconnect();\n  }, [user]);\n  useEffect(() => {\n    const fetchUserChats = async () => {\n      if (user !== null && user !== void 0 && user._id) {\n        setIsUserChatsLoading(true);\n        const response = await getUserChatsRequest(user._id);\n        setIsUserChatsLoading(false);\n        if (response.error) {\n          return response;\n        }\n        setUserChats(response);\n      }\n    };\n    fetchUserChats();\n  }, [user]);\n\n  // const addMessage = (message) => {\n  //     setMessages([...messages, message]);\n  // };\n\n  // const chatContextValue = {\n  //     messages,\n  //     addMessage,\n  // };\n\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      userChats,\n      isUserChatsLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatProvider, \"YfnKNbiE9w/6C4iReVE2d2RV/q8=\");\n_c = ChatProvider;\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","getUserChatsRequest","io","jsxDEV","_jsxDEV","ChatContext","ChatProvider","children","user","_s","userChats","setUserChats","isUserChatsLoading","setIsUserChatsLoading","socket","setSocket","newSocket","disconnect","fetchUserChats","_id","response","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/marce/Desktop/Personal projects/SDH-chat/frontend/src/context/ChatContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { getUserChatsRequest } from '../services/services';\r\nimport {io} from 'socket.io-client';\r\n\r\nexport const ChatContext = createContext();\r\n\r\nexport const ChatProvider = ({ children, user }) => {\r\n    // State for storing chat messages\r\n    // const [messages, setMessages] = useState([]);\r\n    const [userChats, setUserChats] = useState(null);\r\n    const [isUserChatsLoading, setIsUserChatsLoading] = useState(false);\r\n    // eslint-disable-next-line\r\n    const [socket, setSocket] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const newSocket = io('http://localhost:3001');\r\n        setSocket(newSocket);\r\n\r\n        return () => newSocket.disconnect();\r\n    }, [user]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchUserChats = async () => {\r\n            if(user?._id) {\r\n                setIsUserChatsLoading(true);\r\n                const response = await getUserChatsRequest(user._id);\r\n                setIsUserChatsLoading(false);\r\n                if (response.error) {\r\n                    return response\r\n                }\r\n                setUserChats(response);\r\n            }\r\n        };\r\n        fetchUserChats();\r\n    }, [user]);\r\n\r\n    // const addMessage = (message) => {\r\n    //     setMessages([...messages, message]);\r\n    // };\r\n\r\n    // const chatContextValue = {\r\n    //     messages,\r\n    //     addMessage,\r\n    // };\r\n\r\n    return (\r\n        <ChatContext.Provider value={{userChats, isUserChatsLoading}}>\r\n            {children}\r\n        </ChatContext.Provider>\r\n    );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,mBAAmB,QAAQ,sBAAsB;AAC1D,SAAQC,EAAE,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChD;EACA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACnE;EACA,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMgB,SAAS,GAAGd,EAAE,CAAC,uBAAuB,CAAC;IAC7Ca,SAAS,CAACC,SAAS,CAAC;IAEpB,OAAO,MAAMA,SAAS,CAACC,UAAU,CAAC,CAAC;EACvC,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAGVR,SAAS,CAAC,MAAM;IACZ,MAAMkB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAGV,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEW,GAAG,EAAE;QACVN,qBAAqB,CAAC,IAAI,CAAC;QAC3B,MAAMO,QAAQ,GAAG,MAAMnB,mBAAmB,CAACO,IAAI,CAACW,GAAG,CAAC;QACpDN,qBAAqB,CAAC,KAAK,CAAC;QAC5B,IAAIO,QAAQ,CAACC,KAAK,EAAE;UAChB,OAAOD,QAAQ;QACnB;QACAT,YAAY,CAACS,QAAQ,CAAC;MAC1B;IACJ,CAAC;IACDF,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;;EAEV;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACIJ,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAACb,SAAS;MAAEE;IAAkB,CAAE;IAAAL,QAAA,EACxDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAClB,EAAA,CA7CWH,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}